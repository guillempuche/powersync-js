"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2024],{4305:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=t(5893),r=t(1151);const o={id:"index",title:"@journeyapps/powersync-react",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},c="React components for PowerSync",i={id:"react-sdk/index",title:"@journeyapps/powersync-react",description:"This package is currently in a beta release.",source:"@site/docs/react-sdk/index.md",sourceDirName:"react-sdk",slug:"/react-sdk/",permalink:"/powersync-react-native-sdk/react-sdk/",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"index",title:"@journeyapps/powersync-react",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"WatchOnChangeEvent",permalink:"/powersync-react-native-sdk/react-native-sdk/interfaces/WatchOnChangeEvent"},next:{title:"Exports",permalink:"/powersync-react-native-sdk/react-sdk/modules"}},a={},d=[{value:"Context",id:"context",level:2},{value:"Accessing PowerSync",id:"accessing-powersync",level:3},{value:"Watched Queries",id:"watched-queries",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"react-components-for-powersync",children:"React components for PowerSync"}),"\n",(0,s.jsx)(n.p,{children:"This package is currently in a beta release."}),"\n",(0,s.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,s.jsx)(n.p,{children:"Configure a PowerSync DB connection and add it to a context provider."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-JSX",children:"// App.jsx\nimport { PowerSyncDatabase } from '@journeyapps/powersync-react-native'; \nimport { PowerSyncContext } from \"@journeyapps/powersync-react\";\nexport const App = () => {\n    const powerSync = React.useMemo(() => {\n        // Setup PowerSync client\n    }, [])\n\n    return <PowerSyncContext.Provider value={powerSync}>\n        {/** Insert your components here */ }\n    </PowerSyncContext.Provider>\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"accessing-powersync",children:"Accessing PowerSync"}),"\n",(0,s.jsxs)(n.p,{children:["The provided PowerSync client is available with the ",(0,s.jsx)(n.code,{children:"usePowerSync"})," hook."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-JSX",children:"// TodoListDisplay.jsx\nimport { usePowerSync } from \"@journeyapps/powersync-react\";\n\nexport const TodoListDisplay = () => {\n    const powersync = usePowerSync();\n\n    const [lists, setLists] = React.useState([]);\n\n    React.useEffect(() => {\n        powersync.getAll('SELECT * from lists').then(setLists)\n    }, []);\n\n    return <ul>\n        {lists.map(list => <li key={list.id}>{list.name}</li>)}\n    </ul>\n    }\n"})}),"\n",(0,s.jsx)(n.h3,{id:"watched-queries",children:"Watched Queries"}),"\n",(0,s.jsx)(n.p,{children:"Watched queries will automatically update when a dependant table is updated."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-JSX",children:"// TodoListDisplay.jsx\nimport { usePowerSyncWatchedQuery } from \"@journeyapps/powersync-react\";\n\nexport const TodoListDisplay = () => {\n    const todoLists = usePowerSyncWatchedQuery('SELECT * from lists');\n\n    return <View>\n      {todoLists.map((l) => (\n        <Text key={l.id}>{JSON.stringify(l)}</Text>\n      ))}\n    </View>\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>c});var s=t(7294);const r={},o=s.createContext(r);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);